apiVersion: v1
kind: Namespace
metadata:
  name: minio

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: minio
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
  strategy:
    rollingUpdate:
      maxSurge: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
    spec:
      volumes:
        - name: data
          emptyDir: {}
          # persistentVolumeClaim:
          #   claimName: minio
      containers:
        - name: minio
          image: quay.io/minio/minio:latest
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            periodSeconds: 20
          volumeMounts:
            - mountPath: /data
              name: data
          command:
            - /bin/bash
            - -c
          args:
            - minio server /data --console-address :9090
          env:
            - name: MINIO_ROOT_USER
              value: admin
            - name: MINIO_ROOT_PASSWORD
              value: password
          lifecycle:
            # Create a bucket called mybucket
            postStart:
              exec:
                command:
                -  "/bin/sh"
                - "-c"
                - |
                  while ! mc mb /data/mybucket; do echo 'Wait minio to startup...' && sleep 0.5; done;

---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: minio
spec:
  selector:
    app.kubernetes.io/name: minio
  ports:
    - port: 9090
      nodePort: 30090
      name: console
    - port: 9000
      name: s3
  type: NodePort
